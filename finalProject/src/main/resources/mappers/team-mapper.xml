<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="teamMapper">
 	<resultMap type="Team" id="teamResult">
 		<result column="TEAM_NO" property="teamNo" />
 		<result column="TEAM_NAME" property="teamName" />
 		<result column="CREATE_DATE" property="createDate" />
 		<result column="TEAM_TITLE" property="teamTitle" />
 		<result column="ACTIVITY_ATEA" property="activityAtea" />
 		<result column="TEAM_LEVEL" property="teamLevel" />
 		<result column="CATEGORY_NUM" property="categoryNum" />
 		<result column="TEAM_GENDER" property="teamGender" />
 		<result column="TEAM_USER_AGE" property="teamUserAge" />
 		<result column="TEAM_ORIGIN_NAME" property="teamOriginName" />
 		<result column="TEAM_CHANGE_NAME" property="teamChangeName" />
 	</resultMap>

 	
 	<resultMap type="TeamOffer" id="teamOfferResult">
 		<result column="OFFER_NO" property="offerNo" />
 		<result column="OFFER_TITLE" property="offerTitle" />
 		<result column="OFFER_CONTENT" property="offerContent" />
 		<result column="OFFER_GENDER" property="offerGender" />
 		<result column="OFFER_LEVEL" property="offerLevel" />
 		<result column="OFFER_AGE" property="offerAge" />
 		<result column="OFFER_COUNT" property="offerCount" />
 		<result column="USER_NO" property="userNo" />
 		<result column="TEAM_NO" property="teamNo" />
 		<result column="TEAM_NAME" property="teamName" />
 		<result column="ACTIVITY_ATEA" property="activityAtea" />
 		<result column="OFFER_STATUS" property="offerStatus" />
 	</resultMap>
 	
 	 <resultMap type = "TeamMember" id = "teamMemberResult">
    		<result column="TMEMBER_NO" property="tmemberNo"/>
    		<result column="ENROLL_DATE" property="enrollDate"/>
    		<result column="TEAM_NO" property="teamNo"/>
    		<result column="USER_NO" property="userNo"/>
    		<result column="GRADE" property="grade"/>
    		<result column="USER_NAME" property="userName"/>
    		<result column="CITY" property="city"/>
    		<result column="MEMBER_ORIGIN_NAME" property="memberOriginName"/>
    		<result column="MEMBER_CHANGE_NAME" property="memberChangeName"/>
    		<result column="USER_PHONE" property="phone"/>
    </resultMap>


	<resultMap type = "TeamImg" id = "teamImgResult">
    		<result column="TEAM_IMG_NO" property="teamImgNo"/>
    		<result column="TEAM_IMG_URL" property="teamImgUrl"/>
    		<result column="TEAM_ORIGIN_NAME" property="teamOriginName"/>
    		<result column="TEAM_CHANGE_NAME" property="teamChangeName"/>
    		<result column="DLELTE_TEAM_IMG" property="deleteTeamImg"/>
    		<result column="TEAM_NO" property="teamNo"/>
    		<result column="OFFER_NO" property="offerNo"/>
    </resultMap>

    <resultMap type = "TeamReq" id = "teamReqResult">
    		<result column="REQ_NO" property="reqNo"/>
    		<result column="REQ_STATUS" property="reqStatus"/>
    		<result column="REQ_USER_NO" property="reqUserNo"/>
    		<result column="OFFER_NO" property="offerNo"/>
    		<result column="REQ_CONTENT" property="reqContent"/>
    		<result column="USER_NAME" property="userName"/>
    		<result column="GENDER" property="gender"/>
    		<result column="USER_LEVEL" property="userLevel"/>
    		<result column="CITY" property="city"/>
    		<result column="USER_BIRTH" property="userBirth"/>
    		<result column="MEMBER_CHANGE_NAME" property="memberChangeName"/>
    </resultMap>
  


	<select id="selectMyTeam" resultMap="teamResult">
			SELECT TEAM_NO
					,TEAM_NAME
					,CATEGORY_NUM
				FROM TEAM_MEMBER
				JOIN TEAM USING(TEAM_NO)
				WHERE USER_NO = #{userNo}
				AND CATEGORY_NUM = #{categoryNum}
	</select>

	<select id="selectCategoryNum" resultMap="teamResult">
		SELECT CATEGORY_NUM
		FROM TEAM
	</select>
	
	<select id="selectUserNo" resultMap="teamMemberResult">
		SELECT USER_NO
		FROM TEAM_MEMBER
	</select>

 
 	<!-- 게시글 총 갯수 -->
 	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		  FROM TEAM_OFFER
 	</select>
 	
 	<!-- 게시글 조회 쿼리문 -->
 	<select id="selectList" resultMap="teamOfferResult">
 	<!-- 
	 	SELECT *
			FROM(
			        SELECT ROWNUM RNUM, A.*
			        FROM (
			                SELECT OFFER_NO
			                     , OFFER_TITLE
			                     , OFFER_CONTENT
			                     , OFFER_GENDER
			                     , OFFER_LEVEL
		                         , OFFER_AGE
		                         , OFFER_COUNT
		                         , USER_NO
			                     , TEAM_NO
		                         , TEAM_NAME
		                         , ACTIVITY_ATEA
			                FROM TEAM_OFFER 
			                JOIN TEAM USING(TEAM_NO)
			                WHERE OFFER_STATUS = 'Y'
			                ORDER BY TEAM_NO DESC
			            ) A
			        ) 
	-->
		SELECT
		    OFFER.OFFER_NO,
		    OFFER.OFFER_TITLE,
		    OFFER.OFFER_CONTENT,
		    OFFER.OFFER_GENDER,
		    OFFER.OFFER_LEVEL,
		    OFFER.OFFER_AGE,
		    OFFER.OFFER_COUNT,
		    OFFER.USER_NO,
		    OFFER.TEAM_NO,
		    TM.TEAM_NAME,
		    TM.ACTIVITY_ATEA,
		    TI.TEAM_IMG_NO,
		    TI.TEAM_IMG_URL,
		    TI.TEAM_ORIGIN_NAME,
		    TI.TEAM_CHANGE_NAME
		FROM TEAM_OFFER OFFER
		JOIN TEAM TM ON(OFFER.TEAM_NO = TM.TEAM_NO)
		LEFT JOIN TEAM_IMG TI ON(TI.OFFER_NO = OFFER.OFFER_NO)
		WHERE OFFER.OFFER_STATUS = 'Y'
		ORDER BY OFFER.OFFER_NO DESC   
			        
 	</select>
 	
 	
 	
 	
 	<!-- 조회수 올리는 쿼리 -->
	<update id="increaseCount">
 		UPDATE TEAM_OFFER
 		   SET OFFER_COUNT = OFFER_COUNT + 1
 		 WHERE OFFER_NO = #{offerNo}
 	</update>
 	
 	<!-- 게시글 상세조회 쿼리 -->
 	<select id="selectOfferDetail" resultMap="teamOfferResult">	 
 		 SELECT *
			FROM TEAM_OFFER "OFFER"
			JOIN TEAM "T" ON(OFFER.TEAM_NO = T.TEAM_NO)
			LEFT JOIN TEAM_IMG "IMG" ON(OFFER.OFFER_NO = IMG.OFFER_NO)
			WHERE OFFER.OFFER_NO = #{offerNo}
 	</select>
 	
 	<!-- ajax로 지역순 리스트 가져오는 쿼리 -->
 	<select id="selectCity" resultMap="teamOfferResult" parameterType="map">
 		SELECT OFFER_NO,
 			   OFFER_TITLE,
 			   OFFER_CONTENT,
 			   OFFER_GENDER,
 			   OFFER_LEVEL,
 			   OFFER_AGE,
 			   OFFER_COUNT,
               USER_NO,
               TEAM_NO,
               TEAM_NAME,
               ACTIVITY_ATEA
 		  FROM TEAM_OFFER
          JOIN TEAM USING(TEAM_NO)
          WHERE ACTIVITY_ATEA LIKE '%' || #{activityAtea} || '%'
          AND CATEGORY_NUM = #{category}
          AND OFFER_STATUS = 'Y'
          ORDER BY OFFER_NO DESC
 	</select>
 	
 	<!-- 지역 offer게시글 총 갯수 -->
 	<select id="selectOfferListCount" resultType="_int" parameterType="map">
		SELECT COUNT(*)
		  FROM TEAM_OFFER
          JOIN TEAM USING(TEAM_NO)
          WHERE ACTIVITY_ATEA LIKE '%' || #{activityAtea} || '%'
          AND CATEGORY_NUM = #{category}
          AND OFFER_STATUS = 'Y'
 	</select>
 	
 	<!-- 게시글 삭제 -->
 	<update id="deleteOffer">
 		UPDATE TEAM_OFFER
 		   SET OFFER_STATUS = 'N'
 	 	 WHERE OFFER_NO = #{offerNo}
 	</update>
 	
 	<!-- 팀 신청 -->
 	<insert id="teamReq" parameterType="map">
 		INSERT INTO 
		    TEAM_REQ(
		             REQ_NO,
		             REQ_STATUS,
		             REQ_USER_NO,
		             OFFER_NO,
		             REQ_CONTENT
		             )
             VALUES (
 			  		   SEQ_TEAD_REQ.NEXTVAL,
 			  		   'N',
 			  		   #{userNo},
 			  		   #{offerNo},
 			  		   #{reqContent}
                     )
 	</insert>
 	
 	<!-- 작성할때 작성자 정보  -->
 	<select id="selectInformation" resultMap="teamMemberResult"> 
 		SELECT TMEMBER_NO,
		        TEAM_NO,
		        USER_NO,
		        TEAM_NAME,
		        ACTIVITY_ATEA,
		        CATEGORY_NUM
		    FROM TEAM_MEMBER 
		    JOIN TEAM USING(TEAM_NO)
		   WHERE USER_NO = #{userNo} 
		   <!-- 조건문에 팀 번호도 넣어서 구인글 작성 누르면 팀 번호 던져 줘야 함  -->
 	</select>
 	
 	<!-- 게시글 작성  -->
 	<insert id="insertOfferList" parameterType="map">
   		INSERT INTO 
	        TEAM_OFFER(
	                OFFER_NO,
	                OFFER_TITLE,
	                OFFER_CONTENT,
	                OFFER_GENDER,
	                OFFER_LEVEL,
	                OFFER_AGE,
	                OFFER_COUNT,
	                USER_NO,
	                TEAM_NO,
	                OFFER_STATUS
	                )
			VALUES(
			        SEQ_TEAD_OFFER.NEXTVAL, 
			        #{t.offerTitle}, 
			        #{t.offerContent}, 
			        #{t.offerGender}, 
			        #{t.offerLevel}, 
			        #{t.offerAge}, 
			        0, 
			        #{t.userNo}, 
			        #{teamNo}, 
			        'Y')
   </insert>
   
   <!-- 게시글 이미지 올리기  -->
   <insert id="insertOfferImg" parameterType="map">
   		INSERT INTO 
	        TEAM_IMG(
	        		 TEAM_IMG_NO,
                    TEAM_IMG_URL,
                    TEAM_ORIGIN_NAME,
                    TEAM_CHANGE_NAME,
                    DLELTE_TEAM_IMG,
                    TEAM_NO,
                    OFFER_NO
	           		 )	
            VALUES
                    (
                    SEQ_TEAD_IMG.NEXTVAL,
                    #{ti.teamImgUrl}, 
                    #{ti.teamOriginName},
                    #{ti.teamChangeName},
                    'N', 
                    #{teamNo},
                    SEQ_TEAD_OFFER.CURRVAL 
                    )	
   </insert>
   
   <select id="selectOfferImg" resultMap="teamImgResult">
   	SELECT TEAM_IMG_NO
	        ,TEAM_IMG_URL
	        ,TEAM_ORIGIN_NAME
	        ,TEAM_CHANGE_NAME
	        ,DLELTE_TEAM_IMG
	        ,TEAM_NO
	        ,OFFER_NO
		FROM TEAM_IMG
		WHERE OFFER_NO = #{tno}
   </select>
   
   <!-- 가테고리별 전체 지역까지 가져오기  -->
   <select id="selectListCountCate" resultType="_int">
         SELECT COUNT(*)
		  FROM TEAM_OFFER
          JOIN TEAM USING(TEAM_NO)
          WHERE CATEGORY_NUM = #{category}
          AND OFFER_STATUS = 'Y'
 	</select>
 	
 	
 	<!-- 카테고리별 전체 지역 리스트 가져오기 -->
 	<select id="selectCityAll" resultMap="teamOfferResult">
 		SELECT OFFER_NO,
 			   OFFER_TITLE,
 			   OFFER_CONTENT,
 			   OFFER_GENDER,
 			   OFFER_LEVEL,
 			   OFFER_AGE,
 			   OFFER_COUNT,
               USER_NO,
               TEAM_NO,
               TEAM_NAME,
               ACTIVITY_ATEA
 		  FROM TEAM_OFFER
          JOIN TEAM USING(TEAM_NO)
          WHERE CATEGORY_NUM = #{category}
          AND OFFER_STATUS = 'Y'
          ORDER BY OFFER_NO DESC
 	</select>
 	
 	
 	<!-- 카테고리 없을때 지역만  -->
   <select id="selectNotCategory" resultType="_int">
         SELECT COUNT(*)
		  FROM TEAM_OFFER
          JOIN TEAM USING(TEAM_NO)
          WHERE ACTIVITY_ATEA LIKE '%' || #{activityAtea} || '%'
          AND OFFER_STATUS = 'Y'
 	</select>
 	
 	<!-- 카테고리별 전체 지역 리스트 가져오기 -->
 	<select id="selectOnlyCity" resultMap="teamOfferResult">
 		SELECT OFFER_NO,
 			   OFFER_TITLE,
 			   OFFER_CONTENT,
 			   OFFER_GENDER,
 			   OFFER_LEVEL,
 			   OFFER_AGE,
 			   OFFER_COUNT,
               USER_NO,
               TEAM_NO,
               TEAM_NAME,
               ACTIVITY_ATEA
 		  FROM TEAM_OFFER
          JOIN TEAM USING(TEAM_NO)
          WHERE ACTIVITY_ATEA LIKE '%' || #{activityAtea} || '%'
          AND OFFER_STATUS = 'Y'
          ORDER BY OFFER_NO DESC
 	</select>

 	
 	<select id="searchTeam" resultMap="teamResult">
			SELECT TEAM_NO,
			TEAM_NAME,
			CATEGORY_NUM
		FROM TEAM
		WHERE TEAM_NAME  like '%'||#{searchMain}||'%'
	</select>
 	


 	<!-- 팀 생성 -->
 	<insert id="insertTeam">
 		INSERT INTO TEAM
 					(
 						TEAM_NO,
 						TEAM_NAME, 
 						ACTIVITY_ATEA,
 						CATEGORY_NUM,
 						TEAM_LEVEL,
 						TEAM_GENDER,
 						TEAM_USER_AGE
 					)
 		  VALUES
 		  		    (
 		  			   SEQ_TEAM.NEXTVAL,
 		  			   #{teamName},
 		  			   #{activityAtea},
 		  			   #{categoryNum},
 		  			   #{teamLevel},
 		  			   #{teamGender},
 		  			   #{teamUserAge}
 		  		    )
 	</insert>
 	
 	<insert id="insertTeamImg">
 		INSERT INTO TEAM_IMG
 					(
 						TEAM_IMG_NO,
 						TEAM_IMG_URL, 
 						TEAM_ORIGIN_NAME,
 						TEAM_CHANGE_NAME,
 						DLELTE_TEAM_IMG,
 						TEAM_NO
 					)
 		  VALUES
 		  		    (
 		  			   SEQ_TEAD_IMG.NEXTVAL,
 		  			   #{teamImgUrl},
 		  			   #{teamOriginName},
 		  			   #{teamChangeName},
 		  			   'N',
 		  			   SEQ_TEAM.CURRVAL
 		  		    )
 	</insert>

	<!-- 팀 생성할 때 주장 insert해주는 쿼리문 -->
 	<insert id="insertTeamMember">
 			INSERT INTO TEAM_MEMBER
 					(
						TMEMBER_NO,
						ENROLL_DATE,
						TEAM_NO,
						USER_NO,
 						GRADE
 					)
 			VALUES
 					(
 						SEQ_TEAM_MEMBER.NEXTVAL,
 						SYSDATE,
 						SEQ_TEAM.CURRVAL,
 						#{userNo},
 						3
 					)
 	</insert>
 	 	
 	<!-- 팀원 총 몇명인지 구하는 쿼리문 -->
 	<select id="teamMemberCount" resultType="_int">
		SELECT COUNT(*)
		  FROM TEAM_MEMBER
		  WHERE TEAM_NO = #{teamNo}
 	</select>
 	
 	<!-- 팀원의 평균 나이를 구하는 쿼리문 -->
 	<select id="teamAvgAge" resultType="_int">
		SELECT AVG(USER_BIRTH)
			  FROM TEAM
			  JOIN TEAM_MEMBER USING(TEAM_NO)
			  JOIN MEMBER USING(USER_NO)
		  WHERE TEAM_NO = #{teamNo}
 	</select>
 	
 	<!-- 팀 프로필을 가져오는 쿼리문 -->
 	<select id="teamProfile" resultMap="teamResult">
	 	SELECT 
	 	   TEAM_NO,
	 	   TEAM_NAME,
	       TEAM_GENDER,
	       TEAM_USER_AGE,
	       TEAM_LEVEL,
	       CATEGORY_NUM,
	       ACTIVITY_ATEA,
	       TEAM_ORIGIN_NAME,
	       TEAM_CHANGE_NAME
	    FROM TEAM
	    LEFT JOIN TEAM_IMG USING (TEAM_NO)
	    WHERE TEAM_NO = #{teamNo}
	    AND OFFER_NO IS NULL
 	</select>
 	
 	<!-- 팀 멤버리스트 불러오기 -->
 	<select id="teamMemberList" resultMap="teamMemberResult">
	 	SELECT TMEMBER_NO,
	 		   USER_NO,
		 	   GRADE,
		 	   USER_NAME, 
		 	   CITY, 
		 	   MEMBER_ORIGIN_NAME, 
		 	   MEMBER_CHANGE_NAME,
		 	   USER_PHONE
		FROM TEAM_MEMBER
		JOIN MEMBER USING (USER_NO)
		LEFT JOIN MEMBER_IMG USING (USER_NO)
		WHERE TEAM_NO = #{teamNo}
		ORDER BY GRADE DESC 
 	</select>
 	
 	<!-- 팀 프로필 업데이트 쿼리문 -->
 	<update id="updateTeam">
	 	UPDATE TEAM
	 		SET TEAM_NAME = #{teamName}, 
				ACTIVITY_ATEA = #{activityAtea},
				CATEGORY_NUM = #{categoryNum},
				TEAM_LEVEL = #{teamLevel},
				TEAM_GENDER = #{teamGender},
				TEAM_USER_AGE = #{teamUserAge}
	 	   	WHERE TEAM_NO = #{teamNo}
 	</update>
 	
 	<!-- 팀 프로필 사진 업데이트 쿼리문 -->
 	<update id="updateTeamImg">
	 	UPDATE TEAM_IMG
	 		SET TEAM_ORIGIN_NAME = #{teamOriginName},
				TEAM_CHANGE_NAME = #{teamChangeName}
	 	   	WHERE TEAM_No = #{teamNo}
 	</update>


 	<!-- 팀 번호 불러오기 -->
 	<select id="getTeamNumber" resultType="_int">
	 	SELECT TEAM_NO,
	       TEAM_NAME
	    FROM TEAM_MEMBER
	    JOIN TEAM USING(TEAM_NO)
	    WHERE USER_NO = #{userNo}
 	</select>
 	
 	<!-- 이미지 가져오기 resultType="string" resultMap="teamImgResult" -->
   <select id="selectTeamImg" resultType="string">
         SELECT TEAM_CHANGE_NAME
			FROM TEAM_IMG
			WHERE TEAM_NO = #{teamNo}
			 AND OFFER_NO IS NULL
 	</select>


 	<select id="selectMyTeamList" resultMap="teamResult">
	 	SELECT TEAM_NO,
			   TEAM_NAME,
			   CATEGORY_NUM
		  FROM TEAM_MEMBER
		  JOIN TEAM USING (TEAM_NO)
		 WHERE USER_NO = #{userNo}
		   AND CATEGORY_NUM = #{categoryNum}
 	</select>
 
 	<delete id="deleteTeam">
 		DELETE FROM TEAM
		WHERE TEAM_NO = #{tNo}
 	</delete>
 	
 	 <delete id="deleteTeamMemberAll">
 		DELETE FROM TEAM_MEMBER
		WHERE TEAM_NO = #{tNo}
 	</delete>
 	
 	 <delete id="deleteTeamImg">
      	DELETE FROM TEAM_IMG
      	WHERE TEAM_NO = #{tNo}
      	AND OFFER_NO IS NULL
 	</delete>
 	<update id="changeTeamGradeUp">
 		UPDATE TEAM_MEMBER 
 		SET
 			GRADE = 2
 		WHERE 
 			USER_NO = #{userNo} AND
 			TEAM_NO = #{teamNo}
 	</update>
 	<update id="changeTeamGradeDown">
 		UPDATE TEAM_MEMBER 
 		SET
 			GRADE = 1
 		WHERE 
 			USER_NO = #{userNo} AND
 			TEAM_NO = #{teamNo}
 	</update>
 	
 	 <delete id="deleteTeamMember">
      	DELETE FROM TEAM_MEMBER
      	WHERE TEAM_NO = #{teamNo}
      	AND USER_NO = #{userNo}
 	</delete>
 	
 	<!-- 팀 프로필 이미지 가져오기 -->
   <select id="offerProfileImg" resultMap="teamImgResult">
         SELECT TEAM_CHANGE_NAME
			FROM TEAM_IMG
			WHERE TEAM_NO = #{teamNo}
			 AND OFFER_NO IS NULL
 	</select>
 	
 	<!-- 유저 팀 번호 가져오기 -->
   <select id="selectLoginUserNo" resultMap="teamMemberResult">
         SELECT
         		TEAM_NO,
		        USER_NO
		      FROM TEAM_MEMBER
		     WHERE USER_NO = #{userNo}
 	</select>
 	
 	<!-- 팀 신청 리스트  -->
 	<select id="selectReqList" resultMap="teamReqResult">
         <!--  SELECT OFFER_NO,
		       REQ_USER_NO,
		       REQ_STATUS,
		       REQ_CONTENT,
		       REQ_NO,
		       USER_NAME,
		       GENDER,
		       USER_LEVEL,
		       USER_BIRTH,
		       CITY
		    FROM TEAM_REQ
		    JOIN MEMBER ON(REQ_USER_NO = USER_NO)
		    JOIN TEAM_OFFER USING(OFFER_NO)
		    WHERE TEAM_NO = #{tno}
		    AND REQ_STATUS = 'N'-->
		    
		    SELECT 
	               OFFER.OFFER_NO,
			       TR.REQ_USER_NO,
			       TR.REQ_STATUS,
			       TR.REQ_CONTENT,
			       TR.REQ_NO,
			       ME.USER_NAME,
			       ME.GENDER,
			       ME.USER_LEVEL,
			       ME.USER_BIRTH,
			       ME.CITY,
	               MI.MEMBER_CHANGE_NAME
	          FROM TEAM_REQ "TR"
			  JOIN MEMBER "ME" ON(TR.REQ_USER_NO = ME.USER_NO)
			  JOIN TEAM_OFFER "OFFER" ON(OFFER.OFFER_NO = TR.OFFER_NO)
	          LEFT JOIN MEMBER_IMG "MI" ON(TR.REQ_USER_NO = ME.USER_NO)
			 WHERE OFFER.TEAM_NO = #{tno}
			   AND TR.REQ_STATUS = 'N'
 	</select>
 	
 	<!-- 팀 수락 -->
 	<update id="teamReqAccept">
		UPDATE TEAM_REQ
		    SET REQ_STATUS = 'Y'
		    WHERE REQ_NO = #{REQ_NO}
	</update>
	
	<!-- 팀 거절 -->
	<delete id="teamReqReqRefuse">
		DELETE FROM TEAM_REQ
			WHERE
			REQ_NO = #{REQ_NO}
	</delete>
	
	<!-- 팀 이름 가져오기 -->
	<select id="selectTeamName" resultType="string">
		SELECT 
		        TEAM_NAME
		   FROM TEAM
		  WHERE TEAM_NO = #{tno}
	</select>
	
	<!-- 팀 프로필 가져오기 -->
	<select id="selectTeamProImg" resultType="string">
		SELECT 
		        TEAM_CHANGE_NAME
		   FROM TEAM_IMG
		  WHERE TEAM_NO = #{tno}
		    AND OFFER_NO IS NULL
	</select>

 	
 </mapper>