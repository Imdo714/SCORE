<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="memberMapper">
	<resultMap type="Member" id="memberResult">
		<result column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_PHONE" property="phone" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_BIRTH" property="age" />
		<result column="GENDER" property="gender" />
		<result column="USER_STATUS" property="status" />
		<result column="USER_LEVEL" property="userLevel" />
		<result column="CITY" property="address" />
		<result column="USER_POINT" property="point" />
		<result column="TEAM_NO" property="teamNo" />
		<result column="MEMBER_CHANGE_NAME" property="memberChangeName" />
	</resultMap>
	
	<resultMap type="SportInfo" id="sportInfoResult">
		<result column="SPORT_LEVEL" property="sportLever" />
		<result column="SPORT_SCORE" property="sportScore" />
		<result column="SPORT_COUNT" property="sportCount" />
		<result column="SPORT_SMILE" property="sportSmile" />
		<result column="SPORT_YELLOW" property="sportYellow" />
		<result column="SPORT_RED" property="sportRed" />
		<result column="STYLE" property="style" />
		<result column="SKILL" property="skill" />
		<result column="USER_NO" property="userNo" />
		<result column="CATEGORY_NUM" property="categoryNum" />
	</resultMap>
	
	<resultMap type="Friend" id="friendResult">
		<result column="FRIEND_NO" property="friendNo" />
		<result column="FRIEND_REQ_USER" property="friendReqUser" />
		<result column="FRIEND_RES_USER" property="friendResUser" />
		<result column="FRIEND_STATUS" property="friendStatus" />
	</resultMap>
	<resultMap type="MessageAuth" id="messageAuthResult">
		<result column="AUTH_NUM" property="authNum" />
		<result column="PHONE" property="phone" />
		<result column="SEND_DATE" property="sendDate" />
	</resultMap>
	
	<resultMap type="MemberImg" id="memberImgResult">
		<result column="MEMBER_IMG_NO" property="memberImgNo" />
		<result column="MEMBER_URL" property="memberUrl" />
		<result column="MEMBER_ORIGIN_NAME" property="memberOriginName" />
		<result column="MEMBER_CHANGE_NAME" property="memberChangeName" />
		<result column="DELETE_MEMBER_IMG" property="deleteMemberImg" />
		<result column="USER_NO" property="userNo" />
	</resultMap>
	
	<select id="getPostFriends" resultMap="memberResult">
			SELECT 
		 	USER_NO,
            USER_ID,
            USER_NAME,
            CITY,
            MEMBER_CHANGE_NAME
		 FROM MEMBER
		 JOIN FRIEND ON (USER_NO = FRIEND_REQ_USER)
		 LEFT JOIN MEMBER_IMG USING(USER_NO)
		 WHERE 
		 		FRIEND_RES_USER = #{userNo}
				 AND FRIEND_STATUS = 'N'
	</select>

	<select id="selectFriendList" resultMap="memberResult">
			SELECT 
		 	USER_NO,
            USER_ID,
            USER_NAME,
            CITY,
            MEMBER_CHANGE_NAME
		 FROM MEMBER
		 JOIN FRIEND ON (USER_NO = FRIEND_REQ_USER)
		 LEFT JOIN MEMBER_IMG USING(USER_NO)
		 WHERE 
		 		FRIEND_RES_USER = #{friendResUser}
				 AND FRIEND_STATUS = 'Y'
	</select>
	
	
	<delete id ="deleteFriend">
		DELETE FROM FRIEND 
			WHERE FRIEND_REQ_USER = #{friendReqUser}
				AND  FRIEND_RES_USER = #{friendResUser}
				AND FRIEND_STATUS = 'Y'
	</delete>
	
	<delete id ="deleteFriend2">
		DELETE FROM FRIEND 
			WHERE FRIEND_REQ_USER = #{friendResUser}
				AND  FRIEND_RES_USER = #{friendReqUser}
				AND FRIEND_STATUS = 'Y'
	</delete>

	<!-- 회원가입을 위한 쿼리문 -->
	<insert id="joinMember">
		INSERT INTO MEMBER(
			USER_NO,
			USER_ID ,
			USER_PWD ,
			USER_PHONE,
			USER_NAME ,
			USER_BIRTH,
			GENDER,
			CITY
			)
		VALUES (
			SEQ_MEMBER.NEXTVAL,
			#{userId},
			#{userPwd},
			#{phone},
			#{userName},
			#{age},
			#{gender},
			#{address}
			)
	</insert>
	
	
	<select id="selectJoinmember" resultMap="memberResult">
		select 
			USER_NO,
			USER_ID
		FROM MEMBER
			WHERE USER_ID = #{uesrId}
	</select>
	
	
	<insert id="insertSportInfo">
		INSERT INTO SPORTINFO(
			STYLE,
			SKILL,
			USER_NO,
			CATEGORY_NUM  
			)
		VALUES (
			#{style},
			#{skill},
			#{userNo},
			#{categoryNum}
			)
	</insert>
	
	
	<select id="checkId" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_ID = #{checkId}
	</select>
	
	
	<select id="loginMember" resultMap="memberResult">
		SELECT
			USER_NO, 
			USER_ID,
			USER_PWD,
			USER_PHONE,
			USER_NAME,
			USER_BIRTH,
			GENDER,
			CITY,
			USER_POINT,
			USER_LEVEL
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
         AND USER_STATUS = 'Y'
	</select>
	
	<select id="getCountUserfriends" resultType="_int">
		SELECT COUNT(*)
		  FROM FRIEND
		 WHERE
		 FRIEND_STATUS = 'Y' AND 
		 FRIEND_RES_USER = #{userNo}
	</select>


	<select id="getUserSportInfo" resultMap="sportInfoResult">
		SELECT
			SPORT_LEVEL, 
			SPORT_SCORE,
			SPORT_COUNT,
			SPORT_SMILE,
			SPORT_YELLOW,
			SPORT_RED,
			STYLE,
			SKILL,
			USER_NO,
			CATEGORY_NUM
		  FROM SPORTINFO
		 WHERE USER_NO = #{userNo} AND
		 CATEGORY_NUM = #{categoryNum}
	</select>
	
	<update id="updateUserPoint">
		UPDATE MEMBER
				SET USER_POINT = USER_POINT + #{point} 
			WHERE USER_ID = #{userId}
	</update>
	
	<update id="addFriend">
		UPDATE FRIEND
		   SET FRIEND_STATUS = 'Y'
		 where FRIEND_RES_USER = #{friendResUser} 
		   AND FRIEND_REQ_USER = #{friendReqUser}
	
	</update>
	
	<insert id="addFriend2">
		INSERT INTO FRIEND(
				FRIEND_NO,
				FRIEND_RES_USER,
				FRIEND_REQ_USER,
				FRIEND_STATUS  
				)
			VALUES (
				SEQ_FIREDN.NEXTVAL,
				#{friendReqUser},
				#{friendResUser},
				'Y'
				)
	</insert>
	
	<select id="searchMember" resultMap="memberResult">
			SELECT USER_NO,
			USER_ID,
			USER_NAME
		FROM MEMBER
		WHERE USER_ID  like '%'||#{searchMain}||'%'
		AND USER_STATUS = 'Y'
	</select>
	
	<insert id="sendPostFriend">
		INSERT INTO FRIEND(
				FRIEND_NO,
				FRIEND_RES_USER,
				FRIEND_REQ_USER,
				FRIEND_STATUS  
				)
			VALUES (
				SEQ_FIREDN.NEXTVAL,
				#{friendResUser},
				#{friendReqUser},
				'N'
				)
	</insert>
	
	<select id="selectReqResFriendList" resultMap="friendResult">
			select friend_req_user
			from friend
			where friend_res_user = #{userNo}
			and friend_status = 'Y'
	</select>
	
	<select id="checkFriendStatus" resultType="_int">
			SELECT COUNT(*)
			  FROM FRIEND
			 WHERE
			 FRIEND_STATUS = 'N' AND 
			 FRIEND_RES_USER = #{friendResUser}
			 AND
			 FRIEND_REQ_USER = #{friendReqUser}
	</select>
	
	<select id="checkFriendStatus2" resultType="_int">
			SELECT COUNT(*)
			  FROM FRIEND
			 WHERE
			 FRIEND_STATUS = 'Y' AND 
			 FRIEND_RES_USER = #{friendResUser}
			 AND
			 FRIEND_REQ_USER = #{friendReqUser}
	</select>
	

 	<update id="changePoint">
 		UPDATE MEMBER
		   SET USER_POINT = #{point}
		 WHERE USER_NO = #{userNo}
 	</update>
		
	<select id="userInfo" resultMap="memberResult">
			SELECT 
				USER_NO, 
				USER_ID,
				USER_PHONE,
				USER_NAME,
				USER_BIRTH,
				GENDER,
				CITY,
				USER_POINT,
				USER_LEVEL,
				MEMBER_CHANGE_NAME
			  FROM MEMBER
			 LEFT JOIN MEMBER_IMG USING(USER_NO) 
			 WHERE
				USER_NO = #{userNo}
				AND
				USER_STATUS = 'Y'
	</select>
	
	<insert id="insertAuth">
		INSERT INTO MESSAGE_AUTH(
				AUTH_NUM,
				PHONE
				)
			VALUES (
				#{authNum},
				#{phone}
				)
	</insert>
	
	<select id="checkPhoneAuth" resultType="_int">
		SELECT COUNT(*)
		FROM MESSAGE_AUTH
		WHERE PHONE = #{phone}
        AND AUTH_NUM = #{authNum}
        AND SEND_DATE BETWEEN (SYSDATE - 3/24/60)	AND SYSDATE
   <!--      SYSDATE BEWEEN SEND_DATE AND (SEND_DATE + 3/24/60)  -->
	</select>
	
	<!--  마이페이지 멤버 수정-->
	<update id="updateMyPageMember">
		UPDATE MEMBER
		SET USER_NAME = #{userName},
				USER_PHONE = #{phone},
				USER_BIRTH = #{age},
				CITY = #{address},
				GENDER = #{gender}
		WHERE USER_NO = #{userNo}
	</update>
	
	<!--  마이페이지 스포츠 수정-->
	<update id="updateMyPageSport">
		UPDATE SPORTINFO
		SET STYLE = #{style},
				SKILL = #{skill}
		WHERE USER_NO = #{userNo}
		 	AND CATEGORY_NUM = #{categoryNum}
	</update>
	
	<!--  마이페이지 이미지 수정-->
	 <insert id="insertMemImg">
 		INSERT INTO MEMBER_IMG
 					(
 						MEMBER_IMG_NO,
 						MEMBER_URL, 
 						MEMBER_ORIGIN_NAME,
 						MEMBER_CHANGE_NAME,
 						DELETE_MEMBER_IMG,
						USER_NO
 					)
 		  VALUES
 		  		    (
 		  			   SEQ_MEMBER_IMG.NEXTVAL,
 		  			   #{memberUrl},
 		  			   #{memberOriginName},
 		  			   #{memberChangeName},
 		  			  	'N',
 		  			   #{userNo}
 		  		    )
 	</insert>
 	
 		<!--  마이페이지 이미지 수정-->
	 <update id="updateMemImg">
 			UPDATE MEMBER_IMG
			SET 
				MEMBER_URL =  #{memberUrl},
				MEMBER_ORIGIN_NAME = #{memberOriginName},
				MEMBER_CHANGE_NAME = #{memberChangeName},
				DELETE_MEMBER_IMG = 'N',
				USER_NO =  #{userNo}
			WHERE USER_NO = #{userNo}
 	</update>
 	
 	<!-- 마이페이지 이미지 조회 -->
 	 <select id="selectMemberImg" resultMap="memberImgResult">
 			SELECT  MEMBER_IMG_NO,
 						  MEMBER_URL,
 						  MEMBER_ORIGIN_NAME,
 						  MEMBER_CHANGE_NAME,
 						  DELETE_MEMBER_IMG,
 						  USER_NO
 				FROM MEMBER_IMG
 			 WHERE USER_NO = #{userNo}
 			 
 	</select>
 	<select id="selectManegerList" resultMap="memberResult">
	 	SELECT USER_NO,
		       USER_NAME
		  FROM MEMBER
		 WHERE USER_LEVEL = 1
	</select>
 	

 	 <select id="chattingSelectFriend" resultMap="memberResult">
 		SELECT 
 			USER_NO,
 			USER_NAME,
 			USER_ID,
 			MEMBER_CHANGE_NAME
 		FROM
 		(
 			SELECT *
	 		FROM
	 		FRIEND
	 		JOIN MEMBER ON (USER_NO = FRIEND_REQ_USER)
	 		JOIN MEMBER_IMG USING (USER_NO)
	 		WHERE 
	 			FRIEND_RES_USER = #{userNo} AND
	 			FRIEND_STATUS = 'Y'
 		)
 		WHERE USER_NAME LIKE '%'||#{selectValue}||'%'	 
 	</select>
 	
 	<!-- 운영진인 사람들만 조회 -->
 	 <select id="levelMember" resultMap="memberResult">
 			SELECT USER_NO,
					USER_ID,
					USER_PWD,
					USER_PHONE,
					USER_NAME,
					USER_BIRTH,
					GENDER,
					USER_STATUS,
					USER_LEVEL,
					CITY,
					USER_POINT
					FROM MEMBER 
				WHERE USER_LEVEL = 1
 	</select>
 	
 	<!-- 카카오페이 결제 -->
 	<update id="updatePay" parameterType="map">
		UPDATE MEMBER
				SET USER_POINT = USER_POINT + #{point} 
			WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 멤버이미지 셀렉트 -->
	<select id="selectMemImg" resultType="_int">
		SELECT COUNT(*)
			FROM MEMBER_IMG
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 멤버이미지 삭제 -->
	<delete id="deleteMemImg">
		DELETE FROM MEMBER_IMG
		WHERE USER_NO = #{userNo}
	</delete>
	
</mapper>